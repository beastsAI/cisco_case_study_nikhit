name: Deploy Infrastructure and Microservices

on:
  push:
    branches:
      - main # Trigger the workflow when code is pushed to the main branch

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node.js (if not already installed)
        run: |
          if ! command -v node &> /dev/null; then
            curl -fsSL https://deb.nodesource.com/setup_14.x | sudo -E bash -
            sudo apt-get install -y nodejs
          fi

      - name: Install unzip
        run: sudo apt-get update && sudo apt-get install -y unzip

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Modify to your desired AWS region

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7 # Specify the desired Terraform version

      - name: Initialize Terraform
        run: terraform init
        working-directory: /home/ubuntu/actions-runner/_work/cisco_case_study_nikhit/cisco_case_study_nikhit

      - name: Validate Terraform Configuration
        run: terraform validate
        working-directory: /home/ubuntu/actions-runner/_work/cisco_case_study_nikhit/cisco_case_study_nikhit

      - name: Plan Terraform Changes
        run: terraform plan -out=tfplan
        working-directory: /home/ubuntu/actions-runner/_work/cisco_case_study_nikhit/cisco_case_study_nikhit

      - name: Apply Terraform Changes
        run: terraform apply -auto-approve
        working-directory: /home/ubuntu/actions-runner/_work/cisco_case_study_nikhit/cisco_case_study_nikhit

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Configure Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod +x get_helm.sh
          ./get_helm.sh

      - name: Deploy Microservices with Helm
        run: |
          helm install myapp /home/ec2-user/actions-runner/_work
